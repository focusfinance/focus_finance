[
["index.html", "Aprendendo R para economia e finanças Introdução", " Aprendendo R para economia e finanças 22 de abril de 2019 Introdução Essas notas de aulas são complemento e pré-requisito para os cursos de Finanças 1, Finanças 2 e Tópicos Especiais em Finanças ministrado pela professora Paula Hamberger. Além de serem parte dos estudos iniciais e material de consulta do Laboratório de Finanças. Esse material inicialmente segue a estrutura do livro Introductory Statistics with R, 2ª ed. de Peter Dalgaard. Após cobrir esses assuntos introdutórios de R e estatística básica avançaremos para o livro Introduction to R for Quantitative Finance, de Edina Berlinger, Et al, onde começaremos a trabalhar com analise de series temporais, otimização de portfólio, modelo de precificação de ativos, teoria dos valores extremos. Por fim utilizaremos Mastering R for Quantitative Finance de Gergely Daróczi, Et al, para discutir forecasting, Big Data, Optimal Hedging, Análise fundamentalista. Qualquer erro encontrado ou em caso de omissão/erro, involuntária, de qualquer crédito me avise por email. Vítor Salgado pereiravitor00@gmail.com "],
["aula-1.html", "1 Aula 1 1.1 O que é o R? 1.2 Instalando R 1.3 O R como calculadora 1.4 Funções do R: 1.5 TIPOS DE VARIÁVEIS 1.6 Objetos do R (O que são?): 1.7 Matrizes 1.8 Exercicios: 1.9 Alguns comandos básicos úteis: 1.10 Referências", " 1 Aula 1 1.1 O que é o R? Manipulção de dados, cálculos, exibição de gráficos. Existem muitos softwares de estatística, mas o R é um dos mais populares.O R é um software gratuito, o que justifica a sua escolha. Mas além disso, a comunidade é muito ativa, desenvolvendo muitos pacotes - inclusive para econometria e finanças. O R não é tão amigável quanto o gretl: não existem menus para escolher como estimar. Entretanto, ele é muito mais flexível. Assim, o R tem ganho cada vez mais espaço entre aqueles que fazem econometria e finanças.(Coutinho, 2018) O R é um software livre de estatística1 (software livre para computação estatística e construção de gráficos que pode ser baixado e distribuído gratuitamente de acordo com a licença GNU.)2, que funciona em diversos sistemas operacionais: GNU Linux,MicrosoftWindows,Mac OS X e outros. O aprendizado do R é difícil no início devido à necessidade de se adaptar à sua lógica de funcionamento, se acostumar com a estrutura dos seus documentos de ajuda e memorizar alguns comandos básicos. É preciso bastante perseverança e motivação para aprender os comandos básicos, e disposição para ler as páginas de ajuda e os manuais. Entretanto, depois de um certo tempo, ele possibilita que se trabalhe com grande produtividade e, o que é mais importante, eficácia. (Aquino, 2014) Apenas ler esse texto talvez não ajude, acompanhe-o fazendo os cálculos no R. Para um entendimento melhor sobre sofwtare de analise de dados recomendo a leitura de “The Popularity of Data Analysis Software - by Robert A. Muenchen” o artigo mostra os sofwtares mais usados por caso. exemplo: os mais usados para artigo acadêmico: SPSS, SAS, R; os mais usados para trabalhos analiticos: Java, Sas, Pynthon. 1.2 Instalando R Pesquisando no google “R programing”. um dos primeiros resultados é o site https://www.r-project.org/. Acesse este site e siga as instruções. Ou já pesquise direto “download r”. Depois instale uma interface visual chamada Rstudio para não ficar sofrendo trabalhando simplesmente com o interpretador de linha de comando. Pesquise no google “Rstudio”. O R Studio é uma IDE (Integrated Development Enviroment), que facilita muito a vida na hora de programar - especialmente dando sugestões de comandos e mostrando quais variáveis estão salvas no ambiente do R. A interface do R Studio mostra 4 espaços diferentes: no canto esquerdo superior, existe uma tela chamada source (se ela não estiver lá, tente usar ctrl + shift + n para abrir); a direita dela, o ambiente; no canto inferior esquerdo, está o console; e no canto inferior direito está uma tela multiuso, que deve vir com as abas plot, files. Cada uma dessas será explicada, por alto, nesta seção A que mais nos interessa, em um primeiro momento, é o console. Nele, você pode passar comandos direto para o R. Digitando 2 + 2 nele e clicando em enter, o resultado deve aparecer na tela. Em geral, é nele que você vai trabalhar. Entretanto, escrever código muito longos no console é muito ruim. O console é desorganizado, não permite salvar o código passado para ele para ser usado mais tarde e não permite com que você corrija erros com facilidade. O source serve justamente para escrever um código longo - uma função ou uma simulação, por exemplo - que pode ser executado no console. Para isso, basta selecionar o conteúdo e dar ctrl + enter ou chegar no fim da linha e usar ctrl + enter. A tela do canto direito inferior é uma “geleia geral”: a aba plots é onde os gráficos que faremos vão aparecer; a aba files permite você ver arquivos em diferentes pastas do computador. Estas são as abas mais importantes e que mais serão usadas. Em cima desta tela, há a tela environment, que mostra as variáveis que foram criadas e estão disponíveis para o R usar. 1.3 O R como calculadora O forma de uso mais básica do R é usá-lo como calculadora. Os operadores matemáticos básicos são: + para soma, - subtração, * multiplicação, / divisão e ^ exponenciação. Além dos matemáticos temos os operadores lógicos como &gt; maior que, &lt; menor que, &gt;= maior ou igual a, &lt;= menor ou igual a, &amp; E, | OU, == igual a, ! não, != Diferente de. Digite as seguintes operações no source do Rstudio: Para executar o codigo utilize Ctrl+ENTER, se você estiver digitando no console basta apenas o ENTER. 2+2 ## [1] 4 2*2 ## [1] 4 2/2 ## [1] 1 2-2 ## [1] 0 2^2 ## [1] 4 Use parênteses para separar partes dos cálculos, por exemplo, para fazer a conta 4+16, dividido por 4, elevado ao quadrado: ((4+16)/4)^2 ## [1] 25 A notação básica de operações algébricas, como a aplicação hierárquica de parênteses, também pode ser utilizada, Note que somente os parênteses podem ser utilizados nas expressões matemáticas. As chaves (“{}”) e os colchetes (“[]”) têm outras funções no R. 1.4 Funções do R: O R tem diversas funções que podemos usar para fazer os cálculos desejados. O uso básico de uma função é escrever o nome da função e colocar os argumentos entre parênteses, por exemplo: função(argumentos). função especifica qual função irá usar e argumentos especifica os argumentos que serão avaliados pela função. Não se assuste com esses nomes, com um pouco de pratica eles se tornarão triviais.(Landeiro, 2011) 1.4.1 exemplo 1 Considerando que a média setorial seria uma boa aproximação, você quer determinar a taxa de retorno do seu negócio. Empresas comparáveis com a sua, atuando no mesmo ramo,mesma linha de produtos, fornecedores e mesmo perfil de clientes, apresentam as seguintes taxas de retorno: Empresa x taxa de retorno é 20,40% ao ano. Empresa y taxa de retorno é 21,02% ao ano. Empresa z taxa de retorno é 19,13% ao ano. A taxa média de retorno para o segmento onde opera sua empresa é qual? Observando que as taxas são semelhantes, podemos fazer uma média aritmética simples. É uma aproximação, porém serve para compararmos com a taxa fornecida também pelo modelo CAPM. #Criando o vetor segmento que contém os rendimentos das empresas do setor segmento &lt;- c(empresa_x=20.40, empresa_y=21.02, empresa_z=19.13) barplot(segmento) #calculando a taxa média de retorno do setor mean(segmento) ## [1] 20.18333 No R o sinal de #(serquilha) é usado para inserir comentários, é o mesmo que dizer: “a partir do # existem apenas comentários”. O R não lê o que vem após o #. Observe que qualquer texto após o caractere # é ignorado pelo R e esta característica é utilizada para inserir comentários no script que ajudarão o pesquisador a entender o próprio código se precisar retornar a ele alguns meses após tê-lo escrito.(Aquino, 2014) O R é case-sensitive, isto é, ele diferencia letras maiúsculas de minúsculas, portanto A é diferente de a. O separador de casas decimais é ponto “.”. A vírgula é usada para separar argumentos (informações). Não é recomendado o uso de acentos em palavras (qualquer nome que for salvar em um computador, não só no R, evite usar acentos. Acentos são comandos usados em programação e podem causar erros, por exemplo, em documentos do word e excel).(Landeiro, 2011) Logo abaixo quando formos falar de objeto explico o que é vetor. O comando &lt;- (sinal de menor e sinal de menos) significa assinalar (assign). Indica que tudo que vem após este comando será salvo com o nome que vem antes. É o mesmo que dizer “salve os dados a seguir com o nome de.(Landeiro, 2011) A letra c significa concatenar (colocar junto). Entenda como “agrupe os dados entre parênteses dentro do objeto que será criado” neste caso no objeto segmento.(Damaceno, 2018) mean = media = S/n onde S: soma dos termos, n: número de termos. Observe que mean é uma função genérica para media aritmética e o argumento utilizado foi o vetor segmento que continha 3 empresas. Para visulaizar o que uma função faz utilize uma interrogação antes do nome da função.exemplo: ?mean Para criar o gráfico utilizei a função barplot() que cria gráfico de barras horizontais ou verticais. observe que é possível atribuir nomes aos elementos. 1.4.2 exemplo 2 João tinha um dinheiro aplicado e uma vez por mês olhava o saldo da conta: jan - 9839, fev - 10149, mar - 10486, abr - 10746, mai - 11264, jun - 11684, jul 12082, ago - 12599, set - 13004, out - 13350, nov - 13717, dez - 14052. calcule o ganho de cada mês neste período. #criando o vetor que contém os saldos da conta de joão saldos &lt;- c(jan=9839,fev=10149,mar=10486,abr=10746,mai=11264,jun=11684,jul=12082, ago=12599,set=13004,out=13350,nov=13717,dez=14052) #visualizando os saldos em um gráfico barplot(saldos) #calculo do ganho mensal ganho &lt;- diff(saldos) #visualizando o ganho mensal em um gráfico barplot(ganho) Olhe que criei o objeto leituras atribuindo a ele os meses e seus respectivos valores, e na hora do cálculo do consumo mensal utilizei a função diff() que retornou a diferença de leitura entre um mês e o consecutivo. diff() tem a particularidade de retornar como resultado um vetor de tamanho igual ao comprimento do vetor de entrada, menos uma posição. Qual foi o ganho máximo e o mínimo? # 2. Consumos máximos e mínimos #Com dois comandos max(ganho) ## [1] 518 min(ganho) ## [1] 260 #ou simplesmente: range(ganho) ## [1] 260 518 Qual a média, mediana e variância dos ganhos? #3. Média, mediana e variância do consumo mean(ganho) ## [1] 383 median(ganho) ## [1] 367 var(ganho) ## [1] 6476.2 1.4.3 Algumas funções básicas úteis: exponencial - exp() logaritmo natural - neperiano - log() raiz quadrada - sqrt() expoente - ** ou ^ fatorial - factorial() extrair o módulo - abs() somatorio - - sum() produtorio - prod() cosseno - cos() tangente - tan() seno - sin() Saber a parte inteira de uma divisão - %/% Saber o resto da divisão - %% maximo - max() minimo - min() variancia - var() desvio padrão - sd() mediana - median() pi = 3.141593 Inf - infinito NaN - indeterminado (Not a Number), normalmente resultado de uma operação matemática indeterminada NA - indeterminado (Not Available), normalmente caracterizando uma observação perdida (missing value) 1.5 TIPOS DE VARIÁVEIS conforme (Aquino, 2014) “Durante uma análise de dados, precisamos lidar com diferentes tipos de variáveis. A seguir estão listados os tipos mais comuns, com o nome utilizado no R para se referir a eles entre parênteses: Numéricas (numeric): Números inteiros ou reais, como idade, renda, número de filhos. Datas (Date): São um tipo especial de variável numérica. Categóricas (factor): Variáveis qualitativas, ou seja, características dos indivíduos para as quais não é possível atribuir um valor numérico, como sexo, religião, estado civil, opinião sobre algum tema. É possível agrupar os indivíduos em categorias e contar quantos indivíduos pertencem a cada categoria, mas se, por exemplo, um indivíduo afirma ser católico, e outro, protestante, não podemos, com base nessas afirmações, considerar um mais religioso do que o outro. Categóricas ordenáveis (ordered): Tipo de variável categórica cujas categorias podem ser hierarquizáveis, como grau de escolaridade, alguns tipos de respostas a perguntas de questionário. Se à pergunta “Qual o papel do governo?”, as opções de resposta forem “O governo deve mandar em tudo”, “O governo deve controlar algumas coisas” e “Não precisamos de governo”, poderíamos considerar aqueles que optaram pela primeira opção adeptos de uma ideologia mais estatizante do que aqueles que escolheram a terceira opção. Texto (character): Características puramente individuais que não podem ser utilizadas para categorizar os indivíduos. Geralmente aparecem nos bancos de dados apenas para ajudar em análises qualitativas e não estatísticas. Exemplo: o nome dos candidatos num banco de dados de resultados eleitorais. Em alguns casos, os textos são passíveis de categorização, como as respostas a uma pergunta aberta. Neste caso, seria preciso manualmente recodificar as respostas abertas numa nova variável contendo um número limitado de categorias. Booleanas (logical): Variáveis cujos valores podem ser VERDADEIRO ou FALSO; no R, TRUE ou FALSE.&quot; 1.6 Objetos do R (O que são?): Conforme explicado por (Landeiro, 2011) “existem muitos tipos de objetos no R que só passamos a conhecê-los bem com o passar do tempo. Por enquanto vamos aprender os tipos básicos de objetos.” Lista que Landeiro apresenta como os tipos básicos: a) vetores: uma seqüência de valores numéricos ou de caracteres (letras, palavras). matrizes: coleção de vetores em linhas e colunas, todos os vetores dever ser do mesmo tipo (numérico ou de caracteres). dataframe: O mesmo que uma matriz, mas aceita vetores de tipos diferentes (numérico e caracteres). Geralmente nós guardamos nossos dados em objetos do tipo data frame, pois sempre temos variáveis numéricas e variáveis categóricas (por exemplo, largura do rio e nome do rio, respectivamente). listas: conjunto de vetores, dataframes ou de matrizes. Não precisam ter o mesmo comprimento, é a forma que a maioria das funções retorna os resultados. funções: as funções criadas para fazer diversos cálculos também são objetos do R.(Damaceno, 2018) No decorrer da apostila você verá exemplos de cada um destes objetos. Para visualizar o tipo de objeto ou da variável utilize class(). Para uma leitura mais aprofundada sobre os tipos de objetos e definições da linguagem R leia o manual “R language definition” e o “An introduction to R” páginas 7 a 12, ambos disponíveis no menu “HELP”, “Manuais em PDF”. Clique em help no menu do R e em Manuais (em PDF) para abrir os arquivos. 1.6.1 Acessar valores dentro de um objeto [colchetes] Caso queira acessar apenas um valor do conjunto de dados use colchetes []. Isto é possível porque o R salva os objetos como vetores, ou seja, a sequencia na qual você incluiu os dados é preservada. Se quiser excluir valores de um vetor, utilize o mesmo método só que com o sinal de - na frente. E para alterar utilizamos a regra geral objeto[index] &lt;- valor. 1.6.2 exemplo: #calculando retorno anual da empresa w utilizando os retornos mensais #digamos que os retornos mensais da empresa w seja de 19, 18, 17, 19, 18, 18, 17, #22, 21, 20, 20, 17. #atribuindo retornos mensais a empresa w empresa_w_mensal &lt;- c(19, 18, 17, 19, 18, 18, 17, 22, 21, 20, 20, 17) #Acessando valores dentro do objeto empresa_w_mensal[8] #Extrai o oitavo valor ## [1] 22 empresa_w_mensal[c(12,1,2)] #Extrai o primeiro, o segundo e o decimo segundo. ## [1] 17 19 18 #Excluindo valores empresa_w_mensal[-8] #Exclui o oitavo valor ## [1] 19 18 17 19 18 18 17 21 20 20 17 empresa_w_mensal[-c(12,1,2)] #Exclui o primeiro, o segundo e o decimo segundo. ## [1] 17 19 18 18 17 22 21 20 20 #substituindo valores empresa_w_mensal[12] &lt;- 27 #Substitui o decimo segundo valor por 27 empresa_w_mensal[c(11,12)] &lt;- c(23,24) #Substitui o decimo primeiro e o decimo #segundo valor por 23 e 24. empresa_w &lt;- mean(empresa_w_mensal) #calculando retorno medio anual fazendo media # dos retornos mensais e atribuindo esse valor a empresa_w empresa_w #visualizando o valor da empresa_w. ## [1] 19.66667 1.7 Matrizes Chamamos de matriz uma tabela de elementos dispostos em linhas e colunas. Por exemplo, ao recolhermos os dados referentes a receita, lucro e patrimônio de um grupo de quatro empresas, podemos dispô-los em uma tabela: empresa_a &lt;- c(receita=10, lucro=2, patrimonio=100) empresa_b &lt;- c(receita=8, lucro=1, patrimonio=120) empresa_c &lt;- c(receita=11, lucro=4, patrimonio=85) empresa_d &lt;- c(receita=10, lucro=1, patrimonio=94) As funções cbind() (juntar colunas) e rbind() (juntar linhas) juntam vetores formando matrizes, ou seja, uma forma retangular de representação dos dados em que eles estão distribuídos em linhas e colunas. Cada vetor fornecido como argumento para a função cbind()se torna uma coluna da matriz resultante; com a função rbind(), cada vetor se torna uma linha3: cbind(empresa_a, empresa_b, empresa_c, empresa_d) ## empresa_a empresa_b empresa_c empresa_d ## receita 10 8 11 10 ## lucro 2 1 4 1 ## patrimonio 100 120 85 94 rbind(empresa_a, empresa_b, empresa_c, empresa_d) ## receita lucro patrimonio ## empresa_a 10 2 100 ## empresa_b 8 1 120 ## empresa_c 11 4 85 ## empresa_d 10 1 94 Vamos agora salvar a matriz resultante da função cbind() no objeto empresas, poderiamos usar a função colnames() para atribuir nomes às colunas, e a função rownames() para atribuir nomes às linhas: empresas &lt;- cbind(empresa_a, empresa_b, empresa_c, empresa_d) class(empresas) ## [1] &quot;matrix&quot; Para acessar ou extrair dados de uma matrix, também podemos utilizar índices, como nos vetores. A diferença é que agora são necessários dois vetores de índices, um para as linhas e outro para as colunas, separados por uma vírgula. Assim como fizemos com os vetores, também podemos usar nomes para localizar elementos de uma matriz4. empresas[3, ] # seleciona a terceira linha ## empresa_a empresa_b empresa_c empresa_d ## 100 120 85 94 empresas[ , 2] # seleciona a segunda coluna ## receita lucro patrimonio ## 8 1 120 empresas[1, 2] # seleciona o primeiro elemento da segunda coluna ## [1] 8 Qual a média de receita do setor? mean(empresas[1,]) #media de todos os valores da primeira linha ## [1] 9.75 Analogamente ao que fizemos com os vetores, podemos usar os índices para mudar valores de elementos específicos de uma matriz. veja que class(empresas) retornou como resultado matrix, o comando class() informa qual o tipo do objeto 1.8 Exercicios: 1- (Landeiro, 2011) Suponha que você marcou o tempo que leva para chegar a cada uma de suas parcelas no campo. Os tempos em minutos foram: 18, 14, 14, 15, 14, 34, 16, 17, 21, 26. Passe estes valores para o R, chame o objeto de tempo. Usando funções do R ache o tempo máximo, mínimo e o tempo médio que você levou gasta para chegar em suas parcelas. 1.1- (Landeiro, 2011) Ops, o valor 34 foi um erro, ele na verdade é 15. Sem digitar tudo novamente, e usando colchetes [ ], mude o valor e calcule novamente o tempo médio. 2- Você consegue prever o resultado dos comandos abaixo? Caso não consiga, execute os comandos e veja o resultado: x&lt;-c(1,3,5,7,9), y&lt;-c(2,3,5,7,11,13) x+1 b)y*2 c)length(x) e length(y) x + y y[3] y[-3] 3.Considerando que a média setorial seria uma boa aproximação, você quer determinar a taxade retorno do seu negócio. Empresas comparáveis com a sua, atuando no mesmo ramo,mesma linha de produtos, fornecedores e mesmo perfil de clientes, apresentam as seguintestaxas de retorno: a)Empresa A taxa de retorno é 12,00% ao ano b)Empresa B taxa de retorno é 14,00% ao ano c)Empresa C taxa de retorno é 13,00% ao ano A taxa média de retorno para o segmento onde opera sua empresa é? 4 - Você pretende comprar um novo computador daqui a um ano. Hoje você tem R$ 5.000,00 e espera que o computador custe R$ 6.000,00 na data da com pra. Sabendo que o banco remunera suas aplicações à taxa de 1,8% ao mês, quanto você terá de dinheiro no tempo previsto? 5 - Determine o valor de resgate de uma aplicação realizada na caderneta de poupança há três anos. Considere o valor aplicado de R$ 3.000,00 e a taxa média de rendimento de 0,84% ao mês. 6 - Um aplicador deseja obter $ 70.000 no prazo de dois anos. Determine quanto deve ele aplicar hoje em um fundo que rende 3,2% ao quadri-mestre. 1.9 Alguns comandos básicos úteis: Limpar o Console - crtl + l Criar Comentário - # mostrar o valor armazenado na variável - print(nome da variável) mostra o que está no ambiente, mostra as variáveis existentes - ls() remover os objetos - rm(nome da variável) - caso tenha mais de um objeto basta separar por virgula. Saber o tamanho do vetor / numero de observações/elementos - length() saber se é vetor - is.vector() Nomear linha - rownames() Nomear Coluna - colnames() Para visualizar onde está a pasta do R - getwd() Lista os arquivos da pasta R - dir() Colocar os valores de um vetor em ordem crescente - sort() Colocar os valores de um vetor em ordem decrescente - sort(x, decreasing=TRUE) 1.10 Referências Vinícius Damaceno, Codificando louco!, 23 de julho de 2018. acesso em 24 de abril de 2019 https://lvdamacenoblog.wordpress.com/2018/07/23/1264/ Victos Lemes Landeiro, Introdução ao uso do programa R, 04 de março de 2011, Acesso em 24 de abril de 2019 https://cran.r-project.org/doc/contrib/Landeiro-Introducao.pdf Daniel Coutinho, R: Uma Introdução para economistas, 17 de outubro de 2018, acesso em 24 de abril de 2019 https://danmrc.github.io/R-para-Economistas/index.html Jackson Alves de Aquino, R para cientistas sociais, 2014, acesso em 24 de abril de 2019 http://www.uesc.br/editora/livrosdigitais_20140513/r_cientistas.pdf Introdução à Linguagem R para Pós-Graduandos em Ecologia e áreas afins - http://ecologia.ib.usp.br/bie5782/doku.php?id=start Peter Dalgaard, Introductory Statistics with R, 2008 R Core Team (2018). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. (Aquino, 2014)↩ (Landeiro, 2011)↩ (Aquino, 2014)↩ (Aquino, 2014)↩ "],
["aula-2.html", "2 Aula 2 2.1 Factor 2.2 Pacotes (packages) 2.3 Referências", " 2 Aula 2 2.1 Factor Na aula 1 quando falamos sobre tipos de variáveis falamos sobre as variáveis categoricas ou variáveis qualitativas ou seja, características dos indivíduos para as quais não é possível atribuir um valor numérico, como sexo, religião, estado civil, opinião sobre algum tema. É possível agrupar os indivíduos em categorias e contar quantos indivíduos pertencem a cada categoria, mas se, por exemplo, um indivíduo afirma ser católico, e outro, protestante, não podemos, com base nessas afirmações, considerar um mais religioso do que o outro. Logo mais falaremos das categóricas ordenáveis(ordered) um tipo de variável categórica cujas categorias podem ser hierarquizáveis, como grau de escolaridade. 2.1.1 Exemplo 1 Digamos que ao navegar pelos estudos do economatica encontramos essa noticia: 30 maiores empresas de capital aberto da América Latina por receita líquida operacional (Vendas). (link do estudo https://economatica.com/estudos/data/20160513b.pdf) E venha a dúvida, de quais países são essas empresas? Primeiro temos que importar os dados da pesquisa, utilizaremos read.csv por que nosso arquivo esta salvo como um arquivo do tipo csv, são arquivos de texto plano, podendo ser visualizados em editores de texto simples porque não contêm qualquer formatação especial, como negrito, itálico, cores, espaçamento entre linhas etc. . . Apesar do nome, devido ao fato da vírgula ser um símbolo comum em textos, inclusive nos valores de variáveis categóricas, e, principalmente, por ser a vírgula o separador de decimais em alguns idiomas, como o português, na prática, é comum encontrar arquivos csv com os campos separados por ponto e vírgula, espaços e caracteres de tabulação. Para eliminar qualquer dúvida sobre o tipo de valor de um campo, se numérico ou textual, costuma-se escrever os valores que devem ser tratados como texto entre aspas, simples ou duplas. é por isso que no excel quando salvamos um arquivo em csv ele acusa que vamos perder algumas informações. Perde-se toda informação sobre formatação das células e sobre fórmulas utilizadas. #importando os dados maiores_emp &lt;- read.csv(&quot;Pasta1.csv&quot;) maiores_emp ## Posicao.Nome.Pais ## 1 1;Petrobras;Brasil ## 2 2;America Movil;México ## 3 3;JBS;Brasil ## 4 4;Wal Mart de Mexico;México ## 5 5;Vale;Brasil ## 6 6;Ultrapar;Brasil ## 7 7;Copec;Chile ## 8 8;Formento Econ Mex;México ## 9 9;P. Açucar-Cbd;Brasil ## 10 10;Ecopetrol;Colômbia ## 11 11;Cencosud;Chile ## 12 12;Alfa;México ## 13 13;Cemex;México ## 14 14;Bimbo;México ## 15 15;Braskem;Brasil ## 16 16;Ambev S/A;Brasil ## 17 17;Ypf;Argentina ## 18 18;Gerdau;Brasil ## 19 19;Falabella;Chile ## 20 20;Exito;Colômbia ## 21 21;Telef Brasil;Brasil ## 22 22;Lan Chile;Chile ## 23 23;Coca Cola Femsa;México ## 24 24;Eletrobas;México ## 25 25;BRF S.A;Brasil ## 26 26;G.Mexico;México ## 27 27;Tenaris S.A.;Argentina ## 28 28;Oi;Brasil ## 29 29;Inretail Peru Corp. ;Peru ## 30 30;Enersis-Am;Chile Observe que o R reconheceu as linhas mas não separou as colunas, nrow(maiores_emp) #numero de linhas ## [1] 30 ncol(maiores_emp) #numero de colunas ## [1] 1 porém olhe isto - 1;Petrobras;Brasil - 1 deveria estar na coluna posição, petrobras na coluna nome e Brasil na coluna país, os três termos estão separados por ponto e virgula e é exatamente isso que vamos dizer ao R agora. maiores_emp &lt;- read.csv(&quot;Pasta1.csv&quot;, sep = &quot;;&quot;, header = T) Alguns separadores usados são a virgula, o ponto e virgula, TAB e o Espaço. o argumento sep indica qual o separador do arquivo. Lembrando que o separador deve estar entre aspas. O argumento header=TRUE informa que os dados possuem cabeçalho, ou seja, a primeira linha contém os nomes dos atributos (variáveis) e a primeira coluna possui o nome das amostras. #visualizando o objeto maiores_emp maiores_emp ## Posicao Nome Pais ## 1 1 Petrobras Brasil ## 2 2 America Movil México ## 3 3 JBS Brasil ## 4 4 Wal Mart de Mexico México ## 5 5 Vale Brasil ## 6 6 Ultrapar Brasil ## 7 7 Copec Chile ## 8 8 Formento Econ Mex México ## 9 9 P. Açucar-Cbd Brasil ## 10 10 Ecopetrol Colômbia ## 11 11 Cencosud Chile ## 12 12 Alfa México ## 13 13 Cemex México ## 14 14 Bimbo México ## 15 15 Braskem Brasil ## 16 16 Ambev S/A Brasil ## 17 17 Ypf Argentina ## 18 18 Gerdau Brasil ## 19 19 Falabella Chile ## 20 20 Exito Colômbia ## 21 21 Telef Brasil Brasil ## 22 22 Lan Chile Chile ## 23 23 Coca Cola Femsa México ## 24 24 Eletrobas México ## 25 25 BRF S.A Brasil ## 26 26 G.Mexico México ## 27 27 Tenaris S.A. Argentina ## 28 28 Oi Brasil ## 29 29 Inretail Peru Corp. Peru ## 30 30 Enersis-Am Chile #visualizando o tipo do objeto class(maiores_emp) ## [1] &quot;data.frame&quot; maiores_emp é um objeto do tipo data.frame, isso quer dizer que maiores_emp é um objeto que possui linhas e colunas (observações nas linhas e variáveis (atributos) nas colunas). Assim como uma matrix, todas as colunas de um data.frame têm que ter o mesmo número de elementos, mas, ao contrário de uma matrix, um data.frame pode conter colunas de tipos diferentes, com variáveis numéricas, categóricas, booleanas etc. Todas as operações válidas para vetores também podem ser aplicadas às colunas de um data.frame e todas as formas de acessar valores em uma matrix são validos para o data.frame. class(maiores_emp$Pais) ## [1] &quot;factor&quot; class(maiores_emp$Nome) ## [1] &quot;factor&quot; class(maiores_emp$Posicao) ## [1] &quot;integer&quot; Até aqui,sempre que precisamos fazer referência a uma variável de um banco de dados, usamos a notação maiores_empcifrãoPias, onde maiores_emp representa um data.frame e Pais uma de suas colunas ou variáveis. A função attach() permite fazer referência a uma variável de um banco de dados diretamente, sem o prefixo maiores_empcifrão. Ao digitarmos attach(maiores_emp), o R faz cópias das variáveis de maiores_emp que, embora não sejam exibidas pela função ls(), podem ser acessadas pelas demais funções. O inconveniente de usar attach() durante o processo de manipulação dos dados decorre do fato de alterações nos objetos anexados à área de trabalho não se refletirem nas variáveis do data.frame() e vice-versa. Seria preciso usar, constantemente, a função detach() para desanexar os objetos anexados pela última chamada a attach(). attach(maiores_emp) ## The following objects are masked from maiores_emp (pos = 3): ## ## Nome, Pais, Posicao ## The following objects are masked from maiores_emp (pos = 4): ## ## Nome, Pais, Posicao ## The following objects are masked from maiores_emp (pos = 5): ## ## Nome, Pais, Posicao ## The following objects are masked from maiores_emp (pos = 6): ## ## Nome, Pais, Posicao ## The following objects are masked from maiores_emp (pos = 7): ## ## Nome, Pais, Posicao ## The following objects are masked from maiores_emp (pos = 8): ## ## Nome, Pais, Posicao ## The following objects are masked from maiores_emp (pos = 15): ## ## Nome, Pais, Posicao factor(Pais) ## [1] Brasil México Brasil México Brasil Brasil Chile ## [8] México Brasil Colômbia Chile México México México ## [15] Brasil Brasil Argentina Brasil Chile Colômbia Brasil ## [22] Chile México México Brasil México Argentina Brasil ## [29] Peru Chile ## Levels: Argentina Brasil Chile Colômbia México Peru str(Pais) ## Factor w/ 6 levels &quot;Argentina&quot;,&quot;Brasil&quot;,..: 2 5 2 5 2 2 3 5 2 4 ... levels(Pais) ## [1] &quot;Argentina&quot; &quot;Brasil&quot; &quot;Chile&quot; &quot;Colômbia&quot; &quot;México&quot; &quot;Peru&quot; summary(Pais) ## Argentina Brasil Chile Colômbia México Peru ## 2 11 5 2 9 1 pie(summary(Pais), main=&quot;Onde estão as maiores empresas da américa&quot;) 2.2 Pacotes (packages) O R é um programa leve (ocupa pouco espaço e memória) e geralmente roda rápido, até em computadores não muito bons. Isso porque ao instalarmos o R apenas as configurações mínimas para seu funcionamento básico são instaladas (pacotes que vem na instalação “base”). Para realizar tarefas mais complicadas pode ser necessário instalar pacotes adicionais (packages). Existem vários pacotes, para diferentes áreas. Para os economistas, além do pacote de econometria, os pacotes de Time Series, Bayesian, Finance, Machine Learning podem ser de interesse. O R também pode conectar-se diretamente à internet. Desta forma é possível, instalar e atualizar pacotes sem que seja necessário acessar a página do R. O grande atrativo do R são os pacotes. Para instalar um pacote, basta digitar no console: install.packages(“nome-do-pacote”) Um pacote bastante utilizado em finanças é o quantmod. 2.2.1 exemplo 2 #instalando o pacote install.packages(&quot;quantmod&quot;) Não basta apenas instalar um pacote. Para usá-lo é necessário “carregar” o pacote sempre que você abrir o R e for usá-lo. Use a função library para rodar um pacote. #carregando o pacote library(quantmod) Após isso as funcionalidades do quantmod estarão prontas para serem usadas. Lembre-se que sempre que abrir o R será necessário carregar o pacote novamente. Vamos agora testar algumas funcionalidades desse pacote (quantmod). getSymbols(&quot;BTOW3.SA&quot;, src = &quot;yahoo&quot;, from= &quot;2018-01-01&quot;, to=&quot;2018-09-08&quot; ) ## [1] &quot;BTOW3.SA&quot; getSymbols(&quot;MGLU3.SA&quot;, src = &quot;yahoo&quot;, from= &quot;2018-01-01&quot;, to=&quot;2018-09-08&quot; ) ## [1] &quot;MGLU3.SA&quot; candleChart(BTOW3.SA, name = &quot;B2W&quot;) candleChart(MGLU3.SA, name = &quot;Magazine Luiza&quot;) getSymbols() e candleChart() são funções do pacote quantmod. Caso você tenha interesse em melhorar o gráfico você pode buscar o Help do R. Para ver os arquivos de ajuda do R use o comando help(nome.da.função) ou ?nome.da.funcão. Geralmente, o arquivo de help do R possui 10 tópicos básicos: 1 - Description - faz um resumo geral sobre o uso da função 2 - Usage - mostra como a função deve ser utilizada e quais argumentos podem ser especificados 3 - Arguments - explica o que é cada um dos argumentos 4 - Details - explica alguns detalhes sobre o uso e aplicação da função (geralmente poucos) 5 - Value - mostra o que sai no output após usar a função (os resultados) 6 - Note - notas sobre a função 7 - Authors - lista os autores da função (quem escreveu os códigos em R) 8 - References - referências para os métodos usados 9 - See also - mostra outras funções relacionadas que podem ser consultadas 10 - Examples - exemplos do uso da função. Copie e cole os exemplos no R para ver como funciona O manual completo do R e dos pacotes adicionais instalados pode ser acessado com a função help.start().Mas há várias outras formas de se obter ajuda no uso do R. Uma delas é pela chamada à função args(), que lista os argumentos recebidos por uma função, como no exemplo abaixo, args(candleChart) ## function (x, subset = NULL, type = &quot;candlesticks&quot;, show.grid = TRUE, ## name = deparse(substitute(x)), time.scale = NULL, log.scale = FALSE, ## TA = &quot;addVo()&quot;, theme = chartTheme(&quot;black&quot;), major.ticks = &quot;auto&quot;, ## minor.ticks = TRUE, color.vol = TRUE, multi.col = FALSE, ## ...) ## NULL O comando args(candleChart) informa que a função candleChart recebe varios argumentos. Cada argumento é separado do outro por uma vírgula. A presença de “. . .” na lista de argumentos de algumas funções significa que a função poderá receber um número indefinido de argumentos.Muitas vezes, esses argumentos são repassados para outras funções chamadas internamente. Alguns comandos possuem argumentos opcionais; outros são obrigatórios e, se não forem fornecidos, os comandos não funcionarão. Não há nenhuma diferença formal entre argumentos obrigatórios e opcionais e, portanto,somente tentando executar a função,ou lendo a sua documentação, saberemos se um determinado argumento é obrigatório ou não. Por exemplo, ao tentarmos executar a função setwd() sem nenhum argumento, ocorre um erro, ficando claro que o argumento é obrigatório. setwd() ##Error in setwd() : argument &quot;dir&quot; is missing, with no default Em caso de dúvida, digite ?nome_da_função para obter a ajuda necessária. digamos que queremos saber se existe alguma relação entre a o retorno diário da b2w o retorno diario da magazine luiza. #calculando o retorno diário B2W_RET &lt;- dailyReturn(BTOW3.SA) ML_RET &lt;- dailyReturn(MGLU3.SA) #visualizando o numero de observações length(B2W_RET) ## [1] 172 length(ML_RET) ## [1] 172 #visualizando graficamente o valores dos retornos plot(coredata(B2W_RET),coredata(ML_RET) ) Agora devemos rodar a regressão,lm que Cria um modelo linear que pode ser utilizado para regressão linear, análise de variância entre outros. sintaxe- lm(formula, dados, opções) Parâmetros formula- Especifica a relação entre a variável resposta e a variável explicativa. Ver exemplos. dados- Objeto do tipo data.frame que contém os dados. #regressão relacao &lt;- lm(ML_RET~B2W_RET) Uma das funções mais usadas é summary() que, de um modo bastante sucinto, apresenta informações sobre um objeto. Trata-se de uma função genérica que possui um método diferente para diferentes tipos de objetos. Ou seja, o sumário apresentado tem uma formatação que depende da classe do objeto. summary() resumo dos dados apresentando seis medidas de posição que descrevem os dados (os valores mínimo e máximo, a média e a mediana, o primeiro e o terceiro quartis). summary(ML_RET) ## Index daily.returns ## Min. :2018-01-02 Min. :-0.0693606 ## 1st Qu.:2018-03-05 1st Qu.:-0.0170419 ## Median :2018-05-07 Median : 0.0004183 ## Mean :2018-05-06 Mean : 0.0030128 ## 3rd Qu.:2018-07-07 3rd Qu.: 0.0188337 ## Max. :2018-09-06 Max. : 0.1459990 Utilizando o comando summary podemos obter um resumo da regressão. #output da regressão summary(relacao) ## ## Call: ## lm(formula = ML_RET ~ B2W_RET) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.051760 -0.017057 -0.001738 0.012475 0.152297 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.002233 0.002112 1.057 0.292 ## B2W_RET 0.403576 0.059978 6.729 2.51e-10 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.02766 on 170 degrees of freedom ## Multiple R-squared: 0.2103, Adjusted R-squared: 0.2057 ## F-statistic: 45.28 on 1 and 170 DF, p-value: 2.508e-10 ## plot(coredata(B2W_RET),coredata(ML_RET) ) relacao &lt;- lm(ML_RET~B2W_RET) abline(relacao) #retornos acumulados #retornos acumulados acum_ML_RET &lt;- cumsum(ML_RET) plot(acum_ML_RET) acum_B2W_RET &lt;- cumsum(B2W_RET) plot(acum_B2W_RET) 2.3 Referências Introdução ao uso do programa R - INPA PPGE - Victor lemes Landeiro R para cientistas sociais - Jackson Alves de Aquino Introdução à Linguagem R para Pós-Graduandos em Ecologia e áreas afins - http://ecologia.ib.usp.br/bie5782/doku.php?id=start Introductory Statistics with R - Peter Dalgaard R Core Team (2018). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. "],
["aula-3.html", "3 Aula 3 3.1 Estatística descritiva 3.2 Seleção Condicional 3.3 Exercícios 3.4 Condições no R 3.5 Referências", " 3 Aula 3 3.1 Estatística descritiva http://leg.ufpr.br/~fernandomayer/aulas/ce083-2016-2/ex01_intro.html# Exercícios do curso de estatistica computacional professor Fernando de Pol Mayer, (LEG: Laboratório de Estatística e Geoinformação). 1 - O livro “Estatística Básica” de W. O. Bussab e P. A. Morettin traz no segundo capítulo um conjunto de dados hipotético de atributos de 36 funcionários da companhia “Milsa”. Este conjunto de dados está disponível em formato CSV. Com isso: 1.1 - Faça a importação destes dados para o R. # 1. Faça a importação destes dados para o R. milsa &lt;- read.csv(&quot;Milsa.txt&quot;, header = T, sep = &quot;&quot;, dec = &quot;,&quot;) 1.2 - Considerando a variável “estado civil” (Est.civil): 1.2.1- Faça tabelas de frequência absoluta e relativa # 2. Considerando a variável &quot;estado civil&quot; (`Est.civil`): # a. Faça tabelas de frequência absoluta e relativa table(milsa$Est.civil) ## ## casado solteiro ## 20 16 prop.table(table(milsa$Est.civil)) ## ## casado solteiro ## 0.5555556 0.4444444 1.2.2- Faça um gráfico de barras e um de setores (“pizza”) # b. Faça um gráfico de barras e um de setores (&quot;pizza&quot;) barplot(table(milsa$Est.civil)) pie(table(milsa$Est.civil)) 1.3- Considerando a variável “grau de instrução” (Inst): 1.3.1 - Faça tabelas de frequência absoluta e relativa # 3. Considerando a variável &quot;grau de instrução&quot; (`Inst`): # a. Faça tabelas de frequência absoluta e relativa table(milsa$Inst) ## ## ensino_fundamental ensino_médio superior ## 12 18 6 prop.table(table(milsa$Inst)) ## ## ensino_fundamental ensino_médio superior ## 0.3333333 0.5000000 0.1666667 1.3.2 - Faça um gráfico de barras e um de setores (“pizza”) # b. Faça um gráfico de barras e um de setores (&quot;pizza&quot;) barplot(table(milsa$Inst)) pie(table(milsa$Inst)) 1.4 - Considerando a variável “número de filhos” (Filhos): 1.4.1 - Faça tabelas de frequência absoluta, relativa e acumulada # 4. Considerando a variável &quot;número de filhos&quot; (`Filhos`): # a. Faça tabelas de frequência absoluta, relativa e acumulada table(milsa$Filhos) prop.table(table(milsa$Filhos)) cumsum(table(milsa$Filhos)) 1.4.2 - Faça um gráfico com as frequências relativas e outro com as frequências relativas acumuladas # b. Faça um gráfico com as frequências relativas e outro com as # frequências relativas acumuladas plot(prop.table(table(milsa$Filhos))) plot(cumsum(prop.table(table(milsa$Filhos))), type = &quot;S&quot;, axes = FALSE) axis(1, at = 1:5, labels = c(0, 1, 2, 3, 5)) axis(2) box() 1.5 - Considerando a variável “salário” (Salario): 1.5.1 - Verifique os valores máximo e mínimo e qual seria o número adequado de classes para a construção de uma tabela de frequência para resumir esta variável # 5. Considerando a variável &quot;salário&quot; (`Salario`): # a. Verifique os valores máximo e mínimo e qual seria o número # adequado de classes para a construção de uma tabela de # frequência para resumir esta variável range(milsa$Salario) ## [1] 4.0 23.3 nclass.Sturges(milsa$Salario) ## [1] 7 classes &lt;- cut(milsa$Salario, breaks = nclass.Sturges(milsa$Salario)) table(classes) 1.5.2 - Faça um histograma # b. Faça um histograma hist(milsa$Salario) 1.6 -Considerando as variáveis “estado civil” (Est.civil) e “grau de instrução” (Inst): 1.6.1 - Faça uma tabela de contingência para resumir o cruzamento destas duas variáveis # 6. Considerando as variáveis &quot;estado civil&quot; (`Est.civil`) e &quot;grau de # instrução&quot; (`Inst`): # a. Faça uma tabela de contingência para resumir o cruzamento # destas duas variáveis tab &lt;- table(milsa$Est.civil, milsa$Inst) 1.6.2 - A partir da tabela de contingância, faça um gráfico de barras (veja como ficam as barras sobrepostas e lado a lado) # b. A partir da tabela de contingância, faça um gráfico de barras # (veja como ficam as barras sobrepostas e lado a lado) par(mfrow = c(1,2)) barplot(tab, legend = TRUE) barplot(tab, beside = TRUE, legend = TRUE) par(mfrow = c(1,1)) 1.7 - Considerando as variáveis “grau de instrução” (Inst) e “salário” (Salario): 1.7.1 - Faça um boxplot para verificar a relação entre estas duas variáveis # 7. Considerando as variáveis &quot;grau de instrução&quot; (`Inst`) e # &quot;salário&quot; (`Salario`): # a. Faça um *boxplot* para verificar a relação entre estas duas # variáveis boxplot(Salario ~ Inst, data = milsa) 1.7.2 - Calcule a média e o desvio-padrão dos salários para cada grau de instrução # b. Calcule a média e o desvio-padrão dos salários para cada grau # de instrução with(milsa, tapply(Salario, Inst, mean)) ## ensino_fundamental ensino_médio superior ## 7.836667 11.528333 16.475000 with(milsa, tapply(Salario, Inst, sd)) ## ensino_fundamental ensino_médio superior ## 2.956464 3.715144 4.502438 1.8 - Considerando as variáveis Anos e Meses: 1.8.1 Calcule a idade como Anos+Meses/12 (criando uma nova “coluna” chamada Idade) # 8. Considerando as variáveis `Anos` e `Meses`: # a. Calcule a idade como $\\text{Anos} + \\text{Meses}/12$ (criando # uma nova &quot;coluna&quot; chamada `Idade`) milsa$Idade &lt;- milsa$Anos + milsa$Meses/12 1.9 - Considerando as variáveis Salario e Idade: 1.9.1 - Faça um gráfico para explorar a relação entre estas duas variáveis # 9. Considerando as variáveis `Salario` e `Idade`: # a. Faça um gráfico para explorar a relação entre estas duas # variáveis plot(Salario ~ Idade, data = milsa) 1.9.2 Calcule a correlação entre estas duas variáveis # b. Calcule a correlação entre estas duas variáveis cor(milsa$Idade, milsa$Salario) ## [1] 0.3651397 2 - Experimente as funções mean(), var(), sd(), median(), quantile() nos dados mostrados anteriormente (“milsa”). Veja a documentação das funções e as opções de uso. # Usando a variável Salario mean(milsa$Salario) ## [1] 11.12222 var(milsa$Salario) ## [1] 21.04477 sd(milsa$Salario) ## [1] 4.587458 median(milsa$Salario) ## [1] 10.165 quantile(milsa$Salario) ## 0% 25% 50% 75% 100% ## 4.0000 7.5525 10.1650 14.0600 23.3000 3.2 Seleção Condicional http://leg.ufpr.br/~fernandomayer/aulas/ce083-2016-2/03_indexacao_e_selecao.html exemplos do curso de estatistica computacional professor Fernando de Pol Mayer, (LEG: Laboratório de Estatística e Geoinformação). 3.2.1 Seleção condicional em vetores A seleção condicional serve para extrair dados que satisfaçam algum critério, usando expressões condicionais e operadores lógicos. Considere o seguinte vetor dados &lt;- c(5, 15, 42, 28, 79, 4, 7, 14) dados[dados &gt; 15] #Selecione apenas os valores maiores do que 15: ## [1] 42 28 79 dados[dados &gt; 15 &amp; dados &lt;= 35] #Selecione os valores maiores que 15 E menores ou iguais a 35: ## [1] 28 Para entender como funciona a seleção condicional, observe apenas o resultado da condição dentro do colchetes: # Usando &amp; (e) dados &gt; 15 &amp; dados &lt;= 35 ## [1] FALSE FALSE FALSE TRUE FALSE FALSE FALSE FALSE # Usando | (ou) dados &gt; 15 | dados &lt;= 35 ## [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE Os valores selecionados serão aqueles em que a condição for TRUE, nesse caso apenas o quarto elemento do vetor dados. 3.2.2 A função which() Até agora vimos seleções condicionais que nos retornavam o resultado de uma expressão condicional em vetores. No entanto, muitas vezes estamos interessados em saber a posição do resultado de uma expressão condicional, ao invés do resultado em si. A fução which() retorna as posições dos elementos que retornarem TRUE em uma expressão condicional. # Elementos maiores de 15 dados[dados &gt; 15] ## [1] 42 28 79 which(dados &gt; 15) ## [1] 3 4 5 # Elementos maiores de 15 e menores ou iguais a 35 dados[dados &gt; 15 &amp; dados &lt;= 35] ## [1] 28 which(dados &gt; 15 &amp; dados &lt;= 35) ## [1] 4 3.2.3 Seleção condicional em data frames Considere o seguinte data frame dados &lt;- data.frame(ano = c(2001, 2002, 2003, 2004, 2005), captura = c(26, 18, 25, 32, NA), porto = c(&quot;SP&quot;, &quot;RS&quot;, &quot;SC&quot;, &quot;SC&quot;, &quot;RN&quot;)) Extraia deste objeto apenas a linha correspondente ao ano 2004: dados[dados$ano == 2004, ] ## ano captura porto ## 4 2004 32 SC Mostre as linhas apenas do porto “SC”: dados[dados$porto == &quot;SC&quot;, ] ## ano captura porto ## 3 2003 25 SC ## 4 2004 32 SC Observe as linhas onde a captura seja maior que 20, selecionando apenas a coluna captura: dados[dados$captura &gt; 20, &quot;captura&quot;] ## [1] 26 25 32 NA Também exclua as linhas com NAs (agora com todas as colunas): dados[dados$captura &gt; 20 &amp; !is.na(dados$captura), ] ## ano captura porto ## 1 2001 26 SP ## 3 2003 25 SC ## 4 2004 32 SC dados[dados$captura &gt; 20 &amp; complete.cases(dados), ] ## ano captura porto ## 1 2001 26 SP ## 3 2003 25 SC ## 4 2004 32 SC A condição pode ser feita com diferentes colunas: dados[dados$captura &gt; 25 &amp; dados$porto == &quot;SP&quot;, ] ## ano captura porto ## 1 2001 26 SP A função subset() serve para os mesmos propósitos, e facilita todo o processo de seleção condicional: dados[dados$porto == &quot;SC&quot;, ] ## ano captura porto ## 3 2003 25 SC ## 4 2004 32 SC subset(dados, porto == &quot;SC&quot;) ## ano captura porto ## 3 2003 25 SC ## 4 2004 32 SC dados[dados$captura &gt; 20, ] ## ano captura porto ## 1 2001 26 SP ## 3 2003 25 SC ## 4 2004 32 SC ## NA NA NA &lt;NA&gt; subset(dados, captura &gt; 20) ## ano captura porto ## 1 2001 26 SP ## 3 2003 25 SC ## 4 2004 32 SC dados[dados$captura &gt; 20 &amp; !is.na(dados$captura), ] ## ano captura porto ## 1 2001 26 SP ## 3 2003 25 SC ## 4 2004 32 SC dados[dados$captura &gt; 20, &quot;captura&quot;] ## [1] 26 25 32 NA subset(dados, captura &gt; 20, select = captura) ## captura ## 1 26 ## 3 25 ## 4 32 3.3 Exercícios 1 - Você contou 42 caranguejos na Joaquina, 34 no Campeche, 59 na Armação, e 18 na Praia Mole. Crie um data frame para armazenar estas informações (número de caranguejos observados e local). 2 - Com o data frame criado no exercício anterior, mostre qual a praia onde foram coletadas menos de 30 caranguejos (usando seleção condicional!). 3- Crie uma nova coluna (região) neste data frame indicando que Joaquina e Praia Mole estão localizadas no leste da ilha (leste), e Campeche e Armação estão no sul (sul). 4- Selecione as praias de região leste que possuem menos de 15 caranguejos contados. 5- Você está interessado em saber em qual das duas praias do sul, o número de caranguejos contados foi maior do que 40. Usando a seleção condicional, mostre essa informação na tela. 6- Qual região possui praias com mais de 40 caranguejos contados? 3.4 Condições no R Publicado em julho 22, 2015 por Leonardo Filgueira É muito comum ter que fazer algumas escolhas dada uma condição. Se alguma coisa for verdade, então iremos agir de uma maneira, caso seja mentira, então podemos agir de outra maneira. Assim também funciona o R. Nós podemos estabelecer algumas condições para que seja feita uma ou outra ação. Primeiramente veremos quais são os operadores para fazermos as condições. Operadores de comparação Igualdade: == Não igual: != Menor: &lt; Maior: &gt; Menor ou igual: &lt;= Maior ou igual: &gt;= Operadores lógicos E: &amp;&amp; Ou: || Usando esses operadores podemos fazer as condições usando a função if (). Podemos usá-la de algumas maneiras, dependendo da necessidade ou do nosso gosto. Quanto à estrutura, usaremos chaves para delimitar o código que estará condicionado pela função if(). Sintaxe: Se quisermos executar um determinado código apenas se a condição for verdadeira e se a condição for falsa, queremos que nada seja feito, então: `if (condição) { Comandos a serem executados caso a condição nos parênteses seja verdadeira }` Exemplo: Imprima o valor de da variável C, se nela o valor contido for menor que 5. C=7 if(C&gt;5){ print(C)} ## [1] 7 Se quisermos executar um determinado conjunto de código quando a condição for verdadeira e outro quando a condição for falsa, então: `if (condição) { Comandos a serem executados caso a condição nos parênteses seja verdadeira } else { Comandos a serem executados caso a condição nos parênteses seja falsa }` Exemplo: Imprimir o maior número, entre dois números. a=4 b=6 if (a&gt;b) { print(paste(&quot;o maior numero é&quot;,a)) }else{ print(paste(&quot;o maior numero é&quot;,b)) } ## [1] &quot;o maior numero é 6&quot; Neste exemplo, o R imprimirá o valor da variável a apenas se a for maior que b. Caso contrário, imprimirá o valor da variável b. OBS.: O comando paste() tem a função de reunir vários elementos e imprimi-los em conjunto. Ele possui, basicamente, a mesma função que o print(). No exemplo usamos os dois, o que pode ser considerado redundante, mas que fique claro que não há problema ou erro nisso. Outra maneira de usarmos a função neste último caso é escrevermos ifelse (). Sintaxe: ifelse (Condição , comando executado caso a condição seja verdadeira , comando executado caso a condição seja falsa) Exemplo: a=4 b=6 ifelse (a&gt;b , print (paste(&quot;O maior número é:&quot;,a)) , print (paste(&quot;O maior número é:&quot;,b))) ## [1] &quot;O maior número é: 6&quot; ## [1] &quot;O maior número é: 6&quot; Neste exemplo acontece exatamente a mesma coisa do exemplo anterior. A diferença está apenas na maneira de escrever a função. Agora que entendemos como funcionam condições no R, vejamos um exemplo um pouco mais complexo: a=1:10 b=10:20 if ( length (a) == length (b) &amp;&amp; a [1]!=0 ) { c = a*b } else { c = 1:100 } Temos aqui dois vetores a e b, com comprimentos diferentes e o primeiro elemento de a é diferente de 0. A condição dada é que o comprimento (length) dos vetores seja igual e o primeiro elemento do vetor a não seja nulo. Como a primeira condição não é verdadeira, a (condição 1 e (&amp;&amp;) condição 2) é falsa, então o vetor c irá receber uma sequência entre 1 e 100. 3.5 Referências Introdução ao uso do programa R - INPA PPGE - Victor lemes Landeiro R para cientistas sociais - Jackson Alves de Aquino Introdução à Linguagem R para Pós-Graduandos em Ecologia e áreas afins - http://ecologia.ib.usp.br/bie5782/doku.php?id=start Introductory Statistics with R - Peter Dalgaard R Core Team (2018). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. Curso de estatistica computacional professor Fernando de Pol Mayer, (LEG: Laboratório de Estatística e Geoinformação).UFPR. http://leg.ufpr.br/~fernandomayer/aulas/ce083-2016-2/ex01_intro.html#, http://leg.ufpr.br/~fernandomayer/aulas/ce083-2016-2/03_indexacao_e_selecao.html "],
["aula-4.html", "4 Aula 4 4.1 Probabilidade, Distribuição de probabilidade e o teste t 4.2 Combinatória 4.3 Distribuição de probabilidade 4.4 Exercicios 4.5 Referências", " 4 Aula 4 4.1 Probabilidade, Distribuição de probabilidade e o teste t 4.1.1 Probabilidade Probabilidade é o estudo das chances de ocorrência de um resultado, que são obtidas pela razão entre casos favoráveis e casos possíveis. Probabilidade é um ramo da Matemática em que as chances de ocorrência de experimentos são calculadas. É por meio de uma probabilidade, por exemplo, que podemos saber desde a chance de obter cara ou coroa no lançamento de uma moeda até a chance de erro em pesquisas. Para compreender esse ramo, é extremamente importante conhecer suas definições mais básicas, como a fórmula para o cálculo de probabilidades em espaços amostrais equiprováveis, probabilidade da união de dois eventos, probabilidade do evento complementar etc. 4.1.2 Experimento aleatório É qualquer experiência cujo resultado não seja conhecido. Por exemplo: ao jogar uma moeda e observar a face superior, é impossível saber qual das faces da moeda ficará voltada para cima, exceto no caso em que a moeda seja viciada (modificada para ter um resultado mais frequentemente). Suponha que uma sacola de supermercado contenha maçãs verdes e vermelhas. Retirar uma maçã de dentro da sacola sem olhar também é um experimento aleatório. 4.1.3 Ponto amostral Um ponto amostral é qualquer resultado possível em um experimento aleatório. Por exemplo: no lançamento de um dado, o resultado (o número que aparece na face superior) pode ser 1, 2, 3, 4, 5 ou 6. Então, cada um desses números é um ponto amostral desse experimento. 4.1.4 Espaço amostral O espaço amostral é o conjunto formado por todos os pontos amostrais de um experimento aleatório, ou seja, por todos os seus resultados possíveis. Dessa maneira, o resultado de um experimento aleatório, mesmo que não seja previsível, sempre pode ser encontrado dentro do espaço amostral referente a ele. Como os espaços amostrais são conjuntos de resultados possíveis, utilizamos as representações de conjuntos para esses espaços. Por exemplo: O espaço amostral referente ao experimento “lançamento de um dado” é o conjunto \\(\\Omega\\), tal que: \\(\\Omega\\) = {1, 2, 3, 4, 5, 6} Esse conjunto também pode ser representado pelo diagrama de Venn ou, dependendo do experimento, por alguma lei de formação. O número de elementos dos espaços amostrais é representado por n(\\(\\Omega\\)). No caso do exemplo anterior, n(\\(\\Omega\\)) = 6. Lembre-se de que os elementos de um espaço amostral são pontos amostrais, ou seja, resultados possíveis de um experimento aleatório. 4.1.5 Evento Os eventos são subconjuntos de um espaço amostral. Um evento pode conter desde zero a todos os resultados possíveis de um experimento aleatório, ou seja, o evento pode ser um conjunto vazio ou o próprio espaço amostral. No primeiro caso, ele é chamado de evento impossível. No segundo, é chamado de evento certo. Ainda no experimento aleatório do lançamento de um dado, observe os seguintes eventos: A = Obter um número par: A = {2, 4, 6} e n(A) = 3 B = Sair um número primo: B = {2, 3, 5} e n(B) = 3 C = Sair um número maior ou igual a 5: C = {5, 6} e n(C)= 2 D = Sair um número natural: D = {1, 2, 3, 4, 5, 6} e n(D) = 6 4.1.6 Espaços equiprováveis Um espaço amostral é chamado equiprovável quando todos os pontos amostrais dentro dele têm a mesma chance de ocorrer. É o caso de lançamentos de dados ou de moedas não viciados, escolha de bolas numeradas de tamanho e peso idênticos etc. Um exemplo de espaço amostral que pode ser considerado não equiprovável é o formado pelo seguinte experimento: escolher entre tomar sorvete ou fazer caminhada. 4.1.7 Cálculo de probabilidades As probabilidades são calculadas dividindo-se o número de resultados favoráveis pelo número de resultados possíveis, ou seja: \\(P=\\frac{n(E)}{n(\\Omega)}\\) Nesse caso, E é um evento que se quer conhecer a probabilidade, e \\(\\Omega\\) é o espaço amostral que o contém. Por exemplo, no lançamento de um dado, qual a probabilidade de sair o número um? Nesse exemplo, sair o número um é o evento E. Assim, n(E) = 1. O espaço amostral desse experimento contém seis elementos: 1, 2, 3, 4, 5 e 6. Logo, n(\\(\\Omega\\)) = 6. Desse modo: \\[ P=\\frac{n(E)}{n(\\Omega)} \\to P=\\frac{n(1)}{n(6)} \\to P=0,1666... \\] Outro exemplo: qual a probabilidade de obtermos um número par no lançamento de um dado? Os números pares possíveis em um dado são 2, 4 e 6. Logo, n(E) = 3. \\[ P=\\frac{n(E)}{n(\\Omega)} \\to P=\\frac{n(3)}{n(6)} \\to P=0,5 \\] Observe que as probabilidades sempre resultarão em um número dentro do intervalo \\(0 \\le x\\le 1\\). Isso acontece porque E é um subconjunto de \\(\\Omega\\). Dessa maneira, E pode conter desde zero até, no máximo, o mesmo número de elementos que \\(\\Omega\\). digamos que você não esteja convecido que a probabilidade de sair uma face do dado seja de 1/6 e resolvar testar jogando o dado e anotando o valor da face. No R podemos fazer essa simulação. dado &lt;- c(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;) # criando o dado sample(dado, size = 1, replace = T) #jogar o dado uma vez ## [1] &quot;4&quot; A função sample é utilizada para realizar amostras aleatórias e funciona assim: sample(x, size=1, replace = FALSE), onde x é o conjunto de dados do qual as amostras serão retiradas, size é o número de amostras e replace é onde você indica se a amostra deve ser feita com reposição (TRUE) ou sem reposição (FALSE). jodas_10 &lt;- sample(dado, size = 10, replace = T) #jogar o dado 10 vezes jodas_100 &lt;- sample(dado, size = 100, replace = T) #jogar o dado 100 vezes jodas_10000 &lt;- sample(dado, size = 10000, replace = T) #jogar o dado 10.000 vezes jodas_100000 &lt;- sample(dado, size = 100000, replace = T) #jogar o dado 100.000vezes par(mfrow=c(2,2)) barplot(table(jodas_10), main = &quot;10 jogadas&quot;) barplot(table(jodas_100), main = &quot;100 jogadas&quot;) barplot(table(jodas_10000), main = &quot;10.000 jogadas&quot;) barplot(table(jodas_100000), main = &quot;100.000 jogadas&quot;) Quando o experimento for executado repetidamente, os resultados individuais parecerão ocorrer de forma acidental. Contudo, quando o experimento for repetido um grande número de vezes, uma configuração definida ou regularidade surgirá. É esta regularidade que torna possível construir um modelo matemático preciso, com o qual se analisará o experimento. Por ora, o leitor necessita apenas pensar nas repetidas jogadas de uma moeda equilibrada. Muito embora caras e coroas apareçam sucessivamente, em uma maneira quase arbitrária, é fato empírico bem conhecido que, depois de um grande número de jogadas, a proporção de caras e a de coroas serão aproximadamente iguais. Outra situação: temos dados referentes a alunos matriculados em quatro cursos de uma universidade em dado ano. FACE&lt;-read.csv(&quot;alunos.txt&quot;, sep = &quot;&quot;) Vamos indicar por M o evento que ocorre quando, escolhendo-se ao acaso um aluno do conjunto desses quatro cursos, ele for um estudante de Matemática Pura. A, E, C, H e F têm significados análogos. Dessa maneira, qual a P(E)? Qual é a P(A \\(\\cap\\) H)? 4.2 Combinatória Calcula o número de combinações de n elementos em grupos de tamanho k. sintaxe: choose(n,k) Um administrador de um fundo de ações dispõe de ações de 10 empresas para a compra, entre elas as da empresa R e as da empresa S. a) De quantas maneiras ele poderá escolher 7 empresas, entre as 10? choose(10,7) ## [1] 120 Se entre as 7 empresas escolhidas devem figurar obrigatoriamente as empresas R e S, de quantas formas ele poderá escolher as empresas? choose(8,5) ## [1] 56 4.2.1 Fatorial Calcula o fatorial de x. sintaxe: factorial(x) factorial(5) ## [1] 120 4.3 Distribuição de probabilidade Tal como nos modelos determinísticos, nos quais algumas relações funcionais desempenham importante papel (como por exemplo a linear, a quadrática, a exponencial, a trigonométrica etc.), também verificamos que, na construção de modelos não-determinísticos para fenômenos observáveis, algumas distribuições de probabilidade surgem mais freqüentemente que outras. Um motivo para isso é que, da mesma maneira que no caso determinístico, alguns modelos matemáticos relativamente simples parecem ser capazes de descrever uma classe bastante grande de fenômenos. Diversas situações reais muitas vezes se aproximam de certas distribuições estocásticas definidas por algumas hipóteses. Daí a importância de se conhecer e manipular algumas destas distribuições tão presentes em nosso cotidiano. Veja a lista abaixo com algumas funções para gerar valores amostrais de distribuições e seus respectivos parâmetros. Nos detalhes de cada função, os valores indicados (como por exemplo: mean=0, na distribuição normal) são os possíveis por definição (default), mas podem ser alterados pelo usuário ao seu bel prazer, já os que não estão indicados, significa que o parâmetro deve ser especificado pelo usuário. Adicionalmente, outras letras (p, d, q, além do r) adicionadas previamente ao código das distribuições podem ser usadas, com diferentes propósitos. Resumidamente temos: r: Gerador de números aleatórios. Requer argumentos especificando o tamanho da amostra, além dos parâmetros requeridos pela distribuição de interesse; p: Função de probabilidade. Requer um vetor de percentis, além dos parâmetros requeridos pela distribuição de interesse; d: Função densidade. Requer um vetor de percentis, além dos parâmetros requeridos pela distribuição de interesse; q: Função de percentis. Requer um vetor de probabilidades (0 &lt; p &lt; 1), além dos parâmetros requeridos pela distribuição de interesse. 4.3.1 Distribuição 4.4 Exercicios 4.4.1 Consultoria sobre investimentos A diretoria da empresa X, especializada em aplicações na bolsa de valores, vai se reunir com o objetivo de tomar 10 importantes decisões sobre compra e venda de ações. São consideradas decisões acertadas, por exemplo: vender ações de uma companhia cuja cotação, posteriormente, venha a cair; comprar ações de uma companhia cuja cotação, posteriormente, venha a subir, etc. A diretoria estabeleceu uma meta a ser atingida: que sejam tomadas decisões corretas em pelo menos 8 desses 10 casos. Por outro lado, a experiência mostra que, diante de tais situações, a diretoria tem tomado decisões acertadas em cerca de 60% dos casos. Como desta vez as decisões a serem tomadas são consideradas fundamentais para a continuidade dos negócios da empresa X, está sendo cogitada a possibilidade de se contratar uma equipe de consultores, experts no mercado financeiro, para participarem dessa reunião. Acredita-se que, com a presença desses consultores, a margem de acerto nas decisões a serem tomadas aumentaria para cerca de 70%. Calcule a probabilidade de que a meta estabelecida seja atingida: Sem a contratação dos consultores; Com a contratação dos consultores. 4.4.2 Queda na Bolsa Você tem uma carteira com 15 ações. No pregão de ontem 75% das ações na bolsa de valores caíram de preço. Supondo que as ações que perderam valor têm distribuição binomial: Quantas ações da sua carteira você espera que tenham caído de preço? 0.75*15 ## [1] 11.25 Qual o desvio padrão das ações que tem na carteira? n=15 p=0.75 sqrt(n*p*(1-p)) ## [1] 1.677051 Qual a probabilidade que as 15 ações da carteira tenham caído? \\(P=(X=15) = {n\\choose k} p^k q^{n-k} = {15\\choose 15}0,75^{15}(1-0,75)^{15-15}=\\frac{15!}{13!(15-15)!}(0,75)^{15}(0,25)^{0}=0,0134\\) dbinom(15, 15, 0.75) ## [1] 0.01336346 Qual a probabilidade que tenham caído de preço exatamente 10 ações? dbinom(10,15,0.75) ## [1] 0.165146 Qual a probabilidade que treze ou mais ações tenham caído de preço? dbinom(13,15,0.75)+dbinom(14,15,0.75)+dbinom(15,15,0.75) ## [1] 0.2360878 4.4.3 Teste t Em vez de procurar-se uma estimativa do parâmetro, freqüentemente nos parecerá conveniente admitir um valor tético para ele e, depois, utilizar a informação da amostra para afirmar ou rejeitar esse valor hipotético. Um teste t é um teste de hipótese da média de uma ou duas populações distribuídas normalmente. Existem diversos tipos de testes t para diferentes situações, mas todos usam uma estatística de teste que segue uma distribuição t sob a hipótese nula: Teste t para 1 amostra - Testa se a média de uma única população é igual a um valor alvo - A altura média das estudantes universitárias é maior que 1,65 m? Teste t para 2 amostras - Testa se a diferença entre as médias de duas populações independentes é igual a um valor alvo - A altura média das estudantes universitárias é significativamente diferente da altura média dos estudantes universitários? Teste t pareado - Testa se a média das diferenças entre observações independentes ou pareadas é igual a um valor alvo - Se você mede a altura de estudantes universitários do sexo masculino antes e depois que cada sujeito toma uma pílula para perder peso, a perda de peso média é suficientemente significante para concluir que a pílula funciona? Teste t na saída da regressão - Testa se os valores dos coeficientes na equação de regressão diferem significativamente de zero - As notas no vestibular constituem preditores significantes das notas na universidade? Uma propriedade importante do teste t é a sua robustez contra pressupostos de normalidade da população. Em outras palavras, com amostras grandes, os testes t são muitas vezes válidos mesmo quando o pressuposto de normalidade é violada. Esta propriedade os torna um dos procedimentos mais úteis para fazer inferências sobre médias da população. No entanto, com um tamanho amostral pequeno e não-normal e distribuições altamente assimétricas, talvez fosse mais apropriado utilizar testes não-paramétricos. #Testa se as médias de duas variáveis são iguais. Muito utilizado para comparação de #desempenho etc. # t.test(x, y, alternative, conf.level, paired) \\[H_0 :\\mu_x = \\mu_y \\] Onde: x: Variável 1. Deve ser da classe “numeric” y: Variável 2. Deve ser da classe “numeric” alternative: Indica o tipo da hipótese alternativa. “two.sided”indica \\(\\mu_x = \\mu_y\\), “greater”indica \\(\\mu_x &gt; \\mu_y\\), “less”indica \\(\\mu_x &lt; \\mu_y\\). Por padrão alternative = “two.sided”. conf.level: Nível de confiança para o intervalo de confiança do teste. Por padrão conf.level = 0.95. paired: Indica se o teste é pareado ou não. Por padrão paired = FALSE. Pré-suposições: Para aplicação do teste T, algumas pré-suposições devem ser cumpridas, que são: As variâncias devem ser iguais. AS distribuições de probabilidade das variáveis devem ser normais. ou seja, para aplicarmos o teste T precisamos testar duas hipoteses antes, se as variáveis possuem a mesma variâancia e se são gaussianas. 4.5 Referências W. O. Bussab e P. A. Morettin (1987) - Estatística Básica - 4 Edição, Atual Editora P. L. Meyer (1983) - Probabilidade: Aplicações à Estatística, segunda edição, Livros técnicos e Científicos Editora Introdução ao uso do programa R - INPA PPGE - Victor lemes Landeiro Software Livre R: aplicação estatística - Emanuel Fernando Maia de Souza, Luiz Alexandre Peternelli, Márcio Pupin de Mello R para cientistas sociais - Jackson Alves de Aquino Introdução à Linguagem R para Pós-Graduandos em Ecologia e áreas afins - http://ecologia.ib.usp.br/ bie5782/doku.php?id=start Introductory Statistics with R - Peter Dalgaard https://brasilescola.uol.com.br/matematica/probabilidade.htm R Core Team (2018). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. "],
["aula-5.html", "5 Aula 5", " 5 Aula 5 O pacote BETS (sigla para Brazilian Economic Time Series) para o R fornece, de maneira descomplicada, as mais relevantes séries temporais econômicas do Brasil (séries temporais da FGV, IBGE e Banco Central) e diversas ferramentas para analisá-las. O BETS preenche uma lacuna no processo de obtenção de dados no Brasil, na medida em que unifica os pontos de acesso às séries e oferece uma interface bastante simples, flexível e robusta. install.packages(&quot;BETS&quot;) #instalando o pacote library(BETS) #Carregando o pacote #codigo para importação dos dados BETSget(code, from = &quot;&quot;, to = &quot;&quot;, data.frame = FALSE, frequency = NULL) Este é o codigo que usaremos para importar nossos dados. Como não sabemos o que colocar no primeiro argumento (code) usaremos outro cÓdigo primeiro. É atraves do BETS.addin_pt que descobriremos qual o code da nossa série. BETS.addin_pt() #BETS search Digamos que tenhamos interesse em utilizar o Pib Mensal e seu cÓdigo seja 4385. pib_mensal &lt;- BETSget(code=&quot;4385&quot;, from = &quot;2001-01-01&quot;, to = &quot;2018-01-01&quot;) ## Warning: ## BETS-package: There is no corresponding entry in the metadata table. ## ## Don&#39;t worry, this is not a critical problem. We are working on a solution. pib_mensal #Visulaizando os dados importados ## date value ## 1 2001-01-01 44006 ## 2 2001-02-01 44227 ## 3 2001-03-01 47483 ## 4 2001-04-01 46705 ## 5 2001-05-01 48304 ## 6 2001-06-01 45024 ## 7 2001-07-01 47259 ## 8 2001-08-01 48406 ## 9 2001-09-01 47122 ## 10 2001-10-01 48468 ## 11 2001-11-01 47790 ## 12 2001-12-01 44767 ## 13 2002-01-01 38931 ## 14 2002-02-01 38954 ## 15 2002-03-01 41824 ## 16 2002-04-01 42076 ## 17 2002-05-01 42426 ## 18 2002-06-01 41359 ## 19 2002-07-01 43213 ## 20 2002-08-01 44146 ## 21 2002-09-01 43665 ## 22 2002-10-01 45256 ## 23 2002-11-01 44313 ## 24 2002-12-01 41939 ## 25 2003-01-01 43244 ## 26 2003-02-01 44620 ## 27 2003-03-01 46840 ## 28 2003-04-01 46777 ## 29 2003-05-01 45837 ## 30 2003-06-01 45100 ## 31 2003-07-01 47895 ## 32 2003-08-01 47366 ## 33 2003-09-01 48175 ## 34 2003-10-01 49126 ## 35 2003-11-01 47697 ## 36 2003-12-01 46789 ## 37 2004-01-01 49802 ## 38 2004-02-01 50345 ## 39 2004-03-01 56809 ## 40 2004-04-01 55324 ## 41 2004-05-01 54872 ## 42 2004-06-01 55580 ## 43 2004-07-01 58082 ## 44 2004-08-01 57685 ## 45 2004-09-01 57115 ## 46 2004-10-01 57839 ## 47 2004-11-01 58485 ## 48 2004-12-01 57402 ## 49 2005-01-01 67201 ## 50 2005-02-01 67794 ## 51 2005-03-01 75512 ## 52 2005-04-01 74766 ## 53 2005-05-01 73737 ## 54 2005-06-01 74201 ## 55 2005-07-01 75713 ## 56 2005-08-01 77525 ## 57 2005-09-01 75726 ## 58 2005-10-01 76803 ## 59 2005-11-01 76692 ## 60 2005-12-01 76363 ## 61 2006-01-01 85112 ## 62 2006-02-01 84566 ## 63 2006-03-01 93564 ## 64 2006-04-01 89327 ## 65 2006-05-01 93238 ## 66 2006-06-01 91244 ## 67 2006-07-01 95620 ## 68 2006-08-01 97371 ## 69 2006-09-01 93011 ## 70 2006-10-01 95477 ## 71 2006-11-01 94996 ## 72 2006-12-01 93605 ## 73 2007-01-01 106106 ## 74 2007-02-01 105163 ## 75 2007-03-01 116698 ## 76 2007-04-01 113217 ## 77 2007-05-01 117097 ## 78 2007-06-01 115928 ## 79 2007-07-01 120301 ## 80 2007-08-01 121468 ## 81 2007-09-01 116491 ## 82 2007-10-01 123912 ## 83 2007-11-01 121705 ## 84 2007-12-01 118712 ## 85 2008-01-01 131280 ## 86 2008-02-01 131651 ## 87 2008-03-01 139795 ## 88 2008-04-01 140953 ## 89 2008-05-01 141174 ## 90 2008-06-01 144501 ## 91 2008-07-01 151930 ## 92 2008-08-01 148748 ## 93 2008-09-01 147463 ## 94 2008-10-01 148780 ## 95 2008-11-01 137099 ## 96 2008-12-01 129771 ## 97 2009-01-01 124896 ## 98 2009-02-01 125416 ## 99 2009-03-01 138934 ## 100 2009-04-01 134806 ## 101 2009-05-01 136452 ## 102 2009-06-01 138912 ## 103 2009-07-01 144626 ## 104 2009-08-01 144293 ## 105 2009-09-01 143587 ## 106 2009-10-01 148839 ## 107 2009-11-01 146113 ## 108 2009-12-01 145750 ## 109 2010-01-01 166863 ## 110 2010-02-01 169089 ## 111 2010-03-01 190127 ## 112 2010-04-01 183173 ## 113 2010-05-01 182609 ## 114 2010-06-01 181958 ## 115 2010-07-01 189333 ## 116 2010-08-01 189489 ## 117 2010-09-01 186993 ## 118 2010-10-01 190513 ## 119 2010-11-01 191475 ## 120 2010-12-01 188129 ## 121 2011-01-01 199170 ## 122 2011-02-01 205112 ## 123 2011-03-01 219420 ## 124 2011-04-01 214817 ## 125 2011-05-01 220646 ## 126 2011-06-01 218366 ## 127 2011-07-01 223091 ## 128 2011-08-01 227371 ## 129 2011-09-01 219817 ## 130 2011-10-01 223477 ## 131 2011-11-01 223653 ## 132 2011-12-01 219543 ## 133 2012-01-01 189399 ## 134 2012-02-01 192665 ## 135 2012-03-01 208759 ## 136 2012-04-01 200056 ## 137 2012-05-01 206366 ## 138 2012-06-01 202944 ## 139 2012-07-01 211392 ## 140 2012-08-01 216153 ## 141 2012-09-01 205145 ## 142 2012-10-01 216196 ## 143 2012-11-01 210632 ## 144 2012-12-01 203842 ## 145 2013-01-01 194234 ## 146 2013-02-01 190831 ## 147 2013-03-01 206887 ## 148 2013-04-01 208797 ## 149 2013-05-01 205035 ## 150 2013-06-01 202504 ## 151 2013-07-01 212977 ## 152 2013-08-01 213036 ## 153 2013-09-01 206743 ## 154 2013-10-01 213500 ## 155 2013-11-01 208107 ## 156 2013-12-01 205805 ## 157 2014-01-01 198133 ## 158 2014-02-01 199405 ## 159 2014-03-01 207428 ## 160 2014-04-01 206417 ## 161 2014-05-01 206000 ## 162 2014-06-01 197503 ## 163 2014-07-01 209286 ## 164 2014-08-01 207039 ## 165 2014-09-01 206841 ## 166 2014-10-01 210265 ## 167 2014-11-01 203204 ## 168 2014-12-01 203325 ## 169 2015-01-01 146766 ## 170 2015-02-01 144662 ## 171 2015-03-01 159069 ## 172 2015-04-01 151611 ## 173 2015-05-01 149378 ## 174 2015-06-01 148622 ## 175 2015-07-01 153678 ## 176 2015-08-01 151054 ## 177 2015-09-01 148001 ## 178 2015-10-01 150692 ## 179 2015-11-01 146248 ## 180 2015-12-01 146387 ## 181 2016-01-01 141906 ## 182 2016-02-01 144418 ## 183 2016-03-01 155483 ## 184 2016-04-01 150646 ## 185 2016-05-01 148389 ## 186 2016-06-01 150857 ## 187 2016-07-01 152283 ## 188 2016-08-01 154356 ## 189 2016-09-01 150170 ## 190 2016-10-01 149841 ## 191 2016-11-01 149850 ## 192 2016-12-01 151325 ## 193 2017-01-01 160908 ## 194 2017-02-01 162480 ## 195 2017-03-01 177944 ## 196 2017-04-01 168396 ## 197 2017-05-01 171267 ## 198 2017-06-01 170162 ## 199 2017-07-01 174042 ## 200 2017-08-01 176821 ## 201 2017-09-01 171161 ## 202 2017-10-01 173184 ## 203 2017-11-01 172749 ## 204 2017-12-01 174158 ## 205 2018-01-01 148986 plot(pib_mensal) #Plotando os dados importados R Core Team (2018). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/. Pedro Costa Ferreira, Talitha Speranza and Jonatha Costa (2018). BETS: Brazilian Economic Time Series. R package version 0.4.9. https://CRAN.R-project.org/package=BETS "]
]
